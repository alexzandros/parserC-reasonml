// Generated by BUCKLESCRIPT VERSION 4.0.8, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");

function run(parser, cadena) {
  return Curry._1(parser[0], cadena);
}

function parserOr(p1, p2) {
  var innerFn = function (cadena) {
    var match = cadena.length;
    if (match !== 0) {
      var s1 = run(p1, cadena);
      if (s1.tag) {
        return run(p2, cadena);
      } else {
        return s1;
      }
    } else {
      return /* Failure */Block.__(1, [
                "Final de la cadena",
                cadena
              ]);
    }
  };
  return /* Parser */[innerFn];
}

function parserAnd(p1, p2) {
  var innerFn = function (cadena) {
    var match = cadena.length;
    if (match !== 0) {
      var e1 = run(p1, cadena);
      if (e1.tag) {
        return e1;
      } else {
        var e1$1 = run(p2, e1[1]);
        if (e1$1.tag) {
          return e1$1;
        } else {
          return /* Success */Block.__(0, [
                    $$Array.append(e1[0], e1$1[0]),
                    e1$1[1]
                  ]);
        }
      }
    } else {
      return /* Failure */Block.__(1, [
                "Final de la cadena",
                cadena
              ]);
    }
  };
  return /* Parser */[innerFn];
}

exports.run = run;
exports.parserOr = parserOr;
exports.parserAnd = parserAnd;
/* No side effect */
